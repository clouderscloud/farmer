0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs', '/usr/bin/npm', 'publish' ]
2 info using npm@3.5.2
3 info using node@v4.2.6
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/root/node-farmer',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /root/.npm/node-farmer/1.1.6/package.tgz not in flight; packing
9 info lifecycle node-farmer@1.1.6~prepublish: node-farmer@1.1.6
10 silly lifecycle node-farmer@1.1.6~prepublish: no script for prepublish, continuing
11 verbose tar pack [ '/root/.npm/node-farmer/1.1.6/package.tgz',
11 verbose tar pack   '/root/node-farmer' ]
12 verbose tarball /root/.npm/node-farmer/1.1.6/package.tgz
13 verbose folder /root/node-farmer
14 verbose addLocalTarball adding from inside cache /root/.npm/node-farmer/1.1.6/package.tgz
15 silly cache afterAdd node-farmer@1.1.6
16 verbose afterAdd /root/.npm/node-farmer/1.1.6/package/package.json not in flight; writing
17 verbose afterAdd /root/.npm/node-farmer/1.1.6/package/package.json written
18 silly publish { name: 'node-farmer',
18 silly publish   description: 'A lightweight automation tool built for Linux machines',
18 silly publish   keywords:
18 silly publish    [ 'linux',
18 silly publish      'automation',
18 silly publish      'redhat',
18 silly publish      'centos',
18 silly publish      'ubuntu',
18 silly publish      'automation tool',
18 silly publish      'deployment tool',
18 silly publish      'bash script',
18 silly publish      'automation framework',
18 silly publish      'linux application',
18 silly publish      'server management',
18 silly publish      'package management',
18 silly publish      'server installation',
18 silly publish      'linux server management',
18 silly publish      'ansible',
18 silly publish      'puppet',
18 silly publish      'chef',
18 silly publish      'infrastructure management',
18 silly publish      'code deployment',
18 silly publish      'big data',
18 silly publish      'hadoop' ],
18 silly publish   version: '1.1.6',
18 silly publish   homepage: 'https://disizjay.github.io/node-farmer/',
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'git+https://github.com/disizjay/node-farmer.git' },
18 silly publish   publishConfig: { registry: 'https://api.bintray.com/npm/disizjay/linux-tools' },
18 silly publish   bin: { farmer: 'farmer' },
18 silly publish   author:
18 silly publish    { name: 'MANIKUMAR JUTTUKONDA',
18 silly publish      email: 'manikumar.juttukonda@gmail.com',
18 silly publish      url: 'http://bit.ly/disizjay' },
18 silly publish   license: '(MIT)',
18 silly publish   readme: '# A lightweight automation tool built for [Linux](https://en.wikipedia.org/wiki/Linux) machines\n## No client/agent installation | Pure [BASH](https://en.wikipedia.org/wiki/Bash_(Unix_shell)) over [SSH](https://en.wikipedia.org/wiki/Secure_Shell) | PLUG \'N\' PLAY :rocket:\n\n### Workflow:\n```\nSeed(Input) > Sow(Deploy) > Crop(Success) > Harvest(Snapshot) > Fruit(Recovery)\n```\n\n### Terminology:\n```\n Seed\t: The input/instructions that runs on remote host/server\n\n Sow\t: Sowing seeds in soil, is running input/instructions on remote host(s)\n\n Crop\t: Crop is grown, indicates a successful deployment\n\n Harvest: Harvesting crop, is making a snapshot of successful deployment which can be used later in case of recovery\n\n Fruit\t: Snapshot is saved as fruit in compressed format which can be used for recovery\n\n Plow\t: A scripting format used to build input, uses extension .plow\n\t  See \'examples/seeds\' in https://github.com/disizjay/node-farmer/tree/master/examples\n\n Soil\t: A host or group of hosts where input/instructions are executed\n\t  See \'examples/soils\' in https://github.com/disizjay/node-farmer/tree/master/examples\n\n Canal\t: A waterway to convey water for irrigation, temporary directory which holds staging files and logs\n```\n\n### Download & install instructions:\ninstall with npm\n```\n$ npm -g install node-farmer\n$ cp -r /usr/lib/node_modules/node-farmer/examples/* .\n$ farmer help\n```\nupgrade with npm (if already installed an older version)\n```\n$ npm -g update node-farmer\n```\n\n### Usage instructions:\n```\nUsage: farmer [option] --user [username] --seed [seedname] --soil [soilname]\n\n// Options //\n   info : Displays information about existing seeds and soils\n   sow  : Start deployment. Requires additional parameters --user, --seed and --soil\n   feed : Re-deploy from a saved fruit/snapshot\n   help : Show this help\n\n// Additional Parameters //\n   --user : Username used to perform action on remote hosts\n   --seed : Directory containing .plow files\n   --soil : Directory containing host groups\n   --fruit: Directory containing previously saved snapshots\n\n// Examples //\n   Pre-validates provided inputs(seeds/soils)\n        $ farmer info --user root --seed example-user-make --soil example-development\n\n   To run deployment\n        $ farmer sow --user root --seed example-user-make --soil example-development\n\n   To re-deploy from a snapshot\n        $ farmer feed --fruit fruit-example-user-make-08-25-17.tar.gz\n\n   For help\n        $ farmer help\n\n   It is always recommended to run \'info\' before running \'sow\'\n\n```\n\n### Examples:\nSee [examples](https://github.com/disizjay/node-farmer/tree/master/examples)\n\n### How to contibute ? \nSee [contributing](https://github.com/disizjay/node-farmer/blob/master/CONTRIBUTING.md)\n\n### Issues ?\nPlease submit issues [here](https://github.com/disizjay/node-farmer/issues/new)\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: 'cd5a5e147faf1b2537c36de22d08a689ff371dce',
18 silly publish   bugs: { url: 'https://github.com/disizjay/node-farmer/issues' },
18 silly publish   _id: 'node-farmer@1.1.6',
18 silly publish   scripts: {},
18 silly publish   _shasum: '1b93c79dd65bf0ed59790c7b2c7075585c2d4592',
18 silly publish   _from: '.' }
19 verbose getPublishConfig { registry: 'https://api.bintray.com/npm/disizjay/linux-tools' }
20 silly mapToRegistry name node-farmer
21 silly mapToRegistry using default registry
22 silly mapToRegistry registry https://api.bintray.com/npm/disizjay/linux-tools
23 silly mapToRegistry uri https://api.bintray.com/npm/disizjay/linux-tools/node-farmer
24 verbose publish registryBase https://api.bintray.com/npm/disizjay/linux-tools/
25 silly publish uploading /root/.npm/node-farmer/1.1.6/package.tgz
26 verbose request uri https://api.bintray.com/npm/disizjay/linux-tools/node-farmer
27 verbose request always-auth set; sending authorization
28 info attempt registry request try #1 at 7:18:18 PM
29 verbose request id e3b8b3df3fdc052f
30 http request PUT https://api.bintray.com/npm/disizjay/linux-tools/node-farmer
31 http 403 https://api.bintray.com/npm/disizjay/linux-tools/node-farmer
32 verbose headers { server: 'nginx',
32 verbose headers   date: 'Sat, 26 Aug 2017 00:18:20 GMT',
32 verbose headers   'content-type': 'application/json',
32 verbose headers   'transfer-encoding': 'chunked',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'content-encoding': 'gzip' }
33 verbose request invalidating /root/.npm/api.bintray.com/npm/disizjay/linux-tools/node-farmer on PUT
34 error publish Failed PUT 403
35 verbose stack Error: forbidden cannot modify pre-existing version: 1.1.6.: npm
35 verbose stack     at makeError (/usr/share/npm/node_modules/npm-registry-client/lib/request.js:264:12)
35 verbose stack     at CachingRegistryClient.<anonymous> (/usr/share/npm/node_modules/npm-registry-client/lib/request.js:252:14)
35 verbose stack     at /usr/share/npm/node_modules/npm-registry-client/lib/request.js:178:7
35 verbose stack     at Gunzip.onEnd (zlib.js:227:5)
35 verbose stack     at emitNone (events.js:72:20)
35 verbose stack     at Gunzip.emit (events.js:166:7)
35 verbose stack     at endReadableNT (_stream_readable.js:905:12)
35 verbose stack     at nextTickCallbackWith2Args (node.js:441:9)
35 verbose stack     at process._tickCallback (node.js:355:17)
36 verbose statusCode 403
37 verbose pkgid npm
38 verbose cwd /root/node-farmer
39 error Linux 4.4.0-43-Microsoft
40 error argv "/usr/bin/nodejs" "/usr/bin/npm" "publish"
41 error node v4.2.6
42 error npm  v3.5.2
43 error code E403
44 error forbidden cannot modify pre-existing version: 1.1.6.: npm
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
