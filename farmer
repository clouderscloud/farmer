#!/bin/bash
#-----------------------------------------------------------------------------
#    Farmer - A lightweight automation tool built for Linux machines
#    Copyright (C) 2017  Manikumar Juttukonda <manikumar.juttukonda@gmail.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

#-----------------------------------------------------------------------------

#variables
pid=$$
whereami=`pwd`
home=${whereami}
cd ${home}; stat canal fruits soils seeds &>/dev/null; if [ $? -ne 0 ]; then echo -e "\nError: Required directories(canal, fruits, soils, seeds) are missing. Please make sure to clone most latest source"; exit 1; fi
umask 0027
seconds=0
canal_dir="${home}/canal";
fruits_dir="${home}/fruits";
soils_dir="${home}/soils";
seeds_dir="${home}/seeds";

#arguments
remote_user=$3
seed=$5
soil=$7

#functions
function help() {
	echo -e "\nUsage: $0 [option] --user [username] --seed [seedname] --soil [soilname]"
	echo -e "\nOptions"
	echo -e "   info\t: Displays information about existing seeds and soils"
	echo -e "   sow\t: Start deployment. Requires additional parameters --user, --seed and --soil"
	echo -e "   help\t: Show this help"
	echo -e "\nAdditional Parameters"
	echo -e "   --user : Username used to perform action on remote hosts"
	echo -e "   --seed : Directory containing .plow files"
	echo -e "   --soil : Directory containing host groups"
	echo -e "\nExamples"
	echo -e "   To run deployment"
	echo -e "\t $0 sow --user root --seed install-webserver --soil development"
	echo -e "   To dislay information about existing configuration"
	echo -e "\t $0 info --user root --seed install-webserver --soil development"
	echo -e "   For help"
	echo -e "\t $0 help"
	echo -e "   It is always recommended to run 'info' before running 'sow'"
	echo -e "\nSee <https://disizjay.github.io/farmer/> for updates, bug reports, and answers"
}

function farmer_info() {
	echo ""
	echo "Info: Farmer is verifying the quality of seeds and soils"
	echo ""
        echo "  Soil: $soil"
	echo "  (`cat $soils_dir/$soil/hosts 2>/dev/null | wc -l`) number of soils found"
	echo "  Seed: $seed"
	echo "  (`find $seeds_dir/$seed -type f 2>/dev/null | wc -l`) number of seeds found"
	echo ""
	echo "Verifying SSH and remote user"
	while read hn;
	do
		status=$(ssh -o StrictHostKeyChecking=no -o BatchMode=yes -o ConnectTimeout=5 $hn echo ok 2>&1)
		if [[ $status == ok ]] ; then
			echo "[$hn] SSH setup verified"
			ssh -o StrictHostKeyChecking=no $hn 'id -u root' &>/dev/null
			if [ $? -ne 0 ]; then
				echo "[$hn] Remote user[$remote_user] do not exist"
				rc=1
			else
				echo "[$hn] Remote user[$remote_user] verified"
			fi
			
		elif [[ $status == "Permission denied"* ]]; then
			echo "[$hn] SSH setup failed. Make sure passwordless ssh is established between current and remote hosts"
			rc=1
		else
			echo "[$hn] SSH - Unable to connect"
			rc=1
		fi
	done < $soils_dir/$soil/hosts
	echo ""
	return $rc
}

function farmer_sow() {
	echo ""
	echo "Info: Farmer is deploying seeds and soils"
	rm $canal_dir/${seed}_${pid}.sh &>/dev/null
	echo "#!/bin/sh -e" >> $canal_dir/${seed}_${pid}.sh
	for i in `find $seeds_dir/$seed -type f | sort`
	do
	cat $i | grep "arg" | awk -F":::" '{print $2}' >> $canal_dir/${seed}_${pid}.sh
	cat $i | grep "command" | awk -F":::" '{print $2}' >> $canal_dir/${seed}_${pid}.sh
	done
	while read hn;
	do
		echo -e "\nSowing seeds on host[$hn]"
		ssh -o StrictHostKeyChecking=no -o BatchMode=yes -o ConnectTimeout=5 $hn 'bash -s -x' < $canal_dir/${seed}_${pid}.sh
		echo "Farmer completed sowing the seeds in soil [$hn]"
	done < $soils_dir/$soil/hosts
	rm $canal_dir/${seed}_${pid}.sh
	echo -e "\nAll commands were executed on remote servers. Please check log for any errors.."
}

function farmer_harvest() {
	echo ""
	echo "Nothing to harvest right now"
	echo "Thank you!"
}

#start of the script
if [ $# -lt 1 ]; then
	echo ""
	echo "Error #101: Not enough arguments"
	help
	exit 1;
elif [ $# -gt 7 ]; then
	echo ""
	echo "Error #102: Too many aruments"
	help
	exit 1;
fi

echo -e '
              __                                      __   ___
             / _|                                    /_ | / _ \
            | |_ __ _ _ __ _ __ ___   ___ _ __  __   _| || | | |
            |  _/ _` | '\''__| '\''_ ` _ \ / _ \ '\''__| \ \ / / || | | |
            | || (_| | |  | | | | | |  __/ |     \ V /| || |_| |
            |_| \__,_|_|  |_| |_| |_|\___|_|      \_/ |_(_)___/

         Visit <https://disizjay.github.io/farmer/> for more details

'

#main start
case $1 in
	sow )
		if [ $# -ne 7 ]; then
			echo ""
			echo "Error #103: Incorrect usage for 'sow' operation"
			help
			exit 1;
		else
			case $2 in
				--user )
					remote_user=$3
					;;
				*)
					echo ""
                                        echo "Error #107: Incorrect usage for 'sow' operation"
                                        help
                                        exit 1;
                                        ;;
			esac
			case $4 in
				--seed )
					seed=$5
					if [[ ! -d "$seeds_dir/$seed" ]] || [[ ! -f `ls $seeds_dir/$seed/*.plow` ]]
                        		then
                                		echo ""
                                		echo "Error #104: Seed '$seed' do not exit or no .plow files found in seed"
                                		exit 1;
					fi
					;;
				*)
					echo ""
                                        echo "Error #104: Incorrect usage for 'sow' operation"
                                        help
                                        exit 1;
                                        ;;
			esac
			case $6 in
				--soil )
					soil=$7
					if [[ ! -d "$soils_dir/$soil" ]] || [[ ! -f "$soils_dir/$soil/hosts" ]]
                        		then
                                		echo ""
                                		echo "Error #105: Soil '$soil' do not exist or no hosts file found in soil"
                                		exit 1;
					fi
					;;
				*)
					echo ""
					echo "Error #105: Incorrect usage for 'sow' operation"
					help
					exit 1;
					;;
			esac
			farmer_info
			if [[ $rc -eq 1 ]]; then
                                echo "Error: Integrity check failed"
                                echo "Good bye!"
                                exit 1
			else
				echo "Info: Integrity check success"
				farmer_sow
				if [ $? -eq 0 ]; then
					farmer_harvest
				else
					echo "Errors occured while sowing soil, deploying seed"
					exit 1
				fi
                        fi
		fi
		;;
	
	info )
		if [ $# -ne 7 ]; then
                        echo ""
                        echo "Error #103: Incorrect usage for 'info' operation"
                        help
                        exit 1;
                else
                        case $2 in
                                --user )
                                        remote_user=$3
                                        ;;
                                *)
                                        echo ""
                                        echo "Error #107: Incorrect usage for 'info' operation"
                                        help
                                        exit 1;
                                        ;;
                        esac
                        case $4 in
                                --seed )
                                        seed=$5
                                        if [[ ! -d "$seeds_dir/$seed" ]] || [[ ! -f `ls $seeds_dir/$seed/*.plow` ]]
                                        then
                                                echo ""
                                                echo "Error #104: Seed '$seed' do not exit or no .plow files found in seed"
                                                exit 1;
                                        fi
                                        ;;
                                *)
                                        echo ""
                                        echo "Error #104: Incorrect usage for 'info' operation"
                                        help
                                        exit 1;
                                        ;;
                        esac
                        case $6 in
                                --soil )
                                        soil=$7
                                        if [[ ! -d "$soils_dir/$soil" ]] || [[ ! -f "$soils_dir/$soil/hosts" ]]
                                        then
                                                echo ""
                                                echo "Error #105: Soil '$soil' do not exist or no hosts file found in soil"
                                                exit 1;
                                        fi
                                        ;;
                                *)
                                        echo ""
                                        echo "Error #105: Incorrect usage for 'info' operation"
                                        help
                                        exit 1;
                                        ;;
                        esac
                        farmer_info
			if [[ $rc -eq 1 ]]; then
				echo "Error: Integrity check failed"
				echo "Good bye!"
				exit 1
			else
                                echo "Info: Integrity check success"
			fi
                fi
		;;

	help )
		help
		exit 1;
		;;

	*)
		echo ""
		echo "Error #106: Usage error"
		help
		exit 1;
		;;
esac
#end of the script
